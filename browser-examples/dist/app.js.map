{
  "version": 3,
  "sources": ["../../dist/build.js", "../src/app.js"],
  "sourcesContent": ["!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).compareImg=t()}(this,(function(){\"use strict\";return async function(...e){return Array.isArray(e[0])&&(e=e[0]),function(...e){return Array.isArray(e[0])&&(e=e[0]),e.slice(0,-1).every(((t,n)=>t===e[n+1]))}(await Promise.all(e.map((e=>new Promise((async(t,n)=>{try{/(\\?.*)$/.test(e)?e+=\"&t=\"+ +new Date:e+=\"?t=\"+ +new Date;const n=await async function(e){const t=await fetch(e,{mode:\"cors\",cache:\"no-cache\"});if(!t.ok)throw Error(`${e} could not be loaded, response status is ${t.status}`);return t.blob()}(e),r=await async function(e){return new Promise(((t,n)=>{const r=new FileReader;r.addEventListener(\"load\",(()=>t(r.result))),r.addEventListener(\"error\",(()=>n(r.error))),r.readAsBinaryString(e.slice(0,e.size))}))}(n);t(r)}catch(e){n(e)}}))))))}}));\n", "import compare from 'compare-img';\r\n\r\n(async() => {\r\n  try {\r\n    // Compare two same images. \r\n    // Output: compared is true\r\n    let res = await compare('img/sample-1.png', 'img/sample-1.png');\r\n    console.log(`The comparison result of 'img/sample-1.png', 'img/sample-1.png' is ${res}`);\r\n      \r\n    // Compare two different images.\r\n    // Output: false\r\n    res = await compare('img/sample-1.png', 'img/sample-2.png');\r\n    console.log(`The comparison result of 'img/sample-1.png', 'img/sample-2.png' is ${res}`);\r\n\r\n    // Compare two or more images.\r\n    // Output: false\r\n    res = await compare('img/sample-1.png', 'img/sample-1.png', 'img/sample-2.png');\r\n    console.log(`The comparison result of 'img/sample-1.png', 'img/sample-1.png', 'img/sample-2.png' is ${res}`);\r\n\r\n    // The images to be checked can also be passed as an array.\r\n    // Output: false\r\n    res = await compare(['img/sample-1.png', 'img/sample-1.png', 'img/sample-2.png']);\r\n    console.log(`The comparison result of 'img/sample-1.png', 'img/sample-1.png', 'img/sample-2.png' is ${res}`);\r\n  } catch(err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n})();"],
  "mappings": "wlBAAA,gBAAC,UAAS,EAAE,EAAE,CAAC,AAAU,MAAO,IAAjB,UAA0B,AAAa,MAAO,IAApB,YAA2B,EAAO,QAAQ,IAAI,AAAY,MAAO,SAAnB,YAA2B,OAAO,IAAI,OAAO,GAAI,GAAE,AAAa,MAAO,aAApB,YAA+B,WAAW,GAAG,MAAM,WAAW,MAAK,EAAM,UAAU,CAAC,aAAa,MAAO,mBAAkB,EAAE,CAAC,MAAO,OAAM,QAAQ,EAAE,KAAM,GAAE,EAAE,IAAI,YAAY,EAAE,CAAC,MAAO,OAAM,QAAQ,EAAE,KAAM,GAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,MAAO,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,KAAM,KAAM,SAAQ,IAAI,EAAE,IAAK,GAAG,GAAI,SAAS,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,KAAK,GAAG,GAAG,MAAO,EAAC,GAAI,MAAK,GAAG,MAAO,EAAC,GAAI,MAAK,GAAM,GAAE,KAAM,gBAAe,EAAE,CAAC,GAAM,GAAE,KAAM,OAAM,EAAE,CAAC,KAAK,OAAO,MAAM,aAAa,GAAG,CAAC,EAAE,GAAG,KAAM,OAAM,GAAG,6CAA6C,EAAE,UAAU,MAAO,GAAE,QAAQ,GAAG,EAAE,KAAM,gBAAe,EAAE,CAAC,MAAO,IAAI,SAAS,CAAC,EAAE,IAAI,CAAC,GAAM,GAAE,GAAI,YAAW,EAAE,iBAAiB,OAAQ,IAAI,EAAE,EAAE,SAAU,EAAE,iBAAiB,QAAS,IAAI,EAAE,EAAE,QAAS,EAAE,mBAAmB,EAAE,MAAM,EAAE,EAAE,UAAW,GAAG,EAAE,SAAS,EAAN,CAAS,EAAE,cCA/5B,MAAoB,OAEpB,AAAC,UAAW,CACV,GAAI,CAGF,GAAI,GAAM,KAAM,cAAQ,mBAAoB,oBAC5C,QAAQ,IAAI,sEAAsE,KAIlF,EAAM,KAAM,cAAQ,mBAAoB,oBACxC,QAAQ,IAAI,sEAAsE,KAIlF,EAAM,KAAM,cAAQ,mBAAoB,mBAAoB,oBAC5D,QAAQ,IAAI,0FAA0F,KAItG,EAAM,KAAM,cAAQ,CAAC,mBAAoB,mBAAoB,qBAC7D,QAAQ,IAAI,0FAA0F,WAChG,EAAN,CACA,QAAQ,MAAM,GACd,MAAM,EAAI",
  "names": []
}
