async function e(...e){Array.isArray(e[0])&&(e=e[0]);return function(...e){return Array.isArray(e[0])&&(e=e[0]),e.slice(0,-1).every(((n,r)=>n===e[r+1]))}(await Promise.all(e.map((e=>new Promise((async(n,r)=>{try{/(\?.*)$/.test(e)?e+="&t="+ +new Date:e+="?t="+ +new Date;const r=await async function(e){const n=await fetch(e,{mode:"cors",cache:"no-cache",credentials:"include"});return n.ok?n.blob():(console.warn(`${e} could not be loaded, response status is ${n.status}`),null)}(e);if(!r)return void n(null);const t=await async function(e){return new Promise(((n,r)=>{const t=new FileReader;t.addEventListener("load",(()=>n(t.result))),t.addEventListener("error",(()=>r(t.error))),t.readAsBinaryString(e.slice(0,e.size))}))}(r);n(t)}catch(e){r(e)}}))))))}export{e as default};
